@model IPagedList<testje_amk.Models.Artiest>
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common


@{
    ViewData["Title"] = "Artiesten";
}
<link rel="stylesheet" href="~/css/PagedList.css">

<div>
    <h1>Artiesten</h1>
    <p>
        <div class="d-flex justify-content-end">
            <a class="btn col-2 btn-outline-success" asp-action="Create">Nieuwe artiest aanmaken</a>
        </div>
        @using (Html.BeginForm())
        {
            <div class="form">
                <div class="form-floating my-3">
                    <input type="text" class="form-control" id="floatingInput" placeholder="Pink Floyd" onkeyup="searchForRecord()">
                    <label for="floatingInput">Artiest zoeken</label>
                </div>
            </div>
        }
    </p>
    <div class="table-responsive">
        <table id="RecordTable" class="table table-hover">
            <thead>
                <tr>
                    <th scope="col">
                        Naam
                    </th>
                    <th scope="col">
                        Aantal in de lijst
                    </th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var artiest in Model)
                {
                    <tr>
                        <td scope="row">
                            @Html.DisplayFor(modelItem => artiest.Naam)
                        </td>
                        <td>
                            @* @Html.DisplayFor(modelItem => artiest.Songs) *@
                            [0-10000]
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@artiest.Artiestid">Edit</a> |
                            <a asp-action="Details" asp-route-id="@artiest.Artiestid">Details</a> |
                            <a asp-action="Delete" asp-route-id="@artiest.Artiestid">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))

<script>
    function searchForRecord() {
        let filter = event.target.value.toUpperCase();
        let rows = document.querySelector("#RecordTable tbody").rows;
        for (let i = 0; i < rows.length; i++) {
            let firstCol = rows[i].cells[0].textContent.toUpperCase();
            if (firstCol.indexOf(filter) > -1) {
                rows[i].style.display = "";
            } else {
                rows[i].style.display = "none";
            }
        }
    }
</script>