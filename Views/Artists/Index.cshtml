@model IEnumerable<testje_amk.Models.Artiest>
@using testje_amk.Models; 
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-controller="Artists" asp-action="Index" method="get">
    <label> Artiest: </label>
    <input type="text" name="SearchString" onkeyup="searchForRecord()" />
</form>

<div class="table-responsive">
    <table id="RecordTable" class="table table-hover">
        <thead>
        <tr>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Naam)
            </th>
            <th scope="col">
                Aantal in de lijst
            </th>
            <td scope="col"></td>
        </tr>
        </thead>
        <tbody>
        @foreach (var Artiest in Model) {
            <tr>
                <th scope="row">
                    @Html.DisplayFor(modelItem => Artiest.Naam)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => Artiest.Songs)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@Artiest.Artiestid">Edit</a> |
                    <a asp-action="Details" asp-route-id="@Artiest.Artiestid">Details</a> |
                    <a asp-action="Delete" asp-route-id="@Artiest.Artiestid">Delete</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

<script>
    function searchForRecord()
    {
        let filter = event.target.value.toUpperCase();
        let rows = document.querySelector("#RecordTable tbody").rows;
        for (let i = 0; i < rows.length; i++) {
            let firstCol = rows[i].cells[0].textContent.toUpperCase();
            if (firstCol.indexOf(filter) > -1) {
                rows[i].style.display = "";
            } else {
                rows[i].style.display = "none";
            }
        }
    } 

</script>