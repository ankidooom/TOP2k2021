@model IPagedList<testje_amk.Models.Artiest>
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common


@{ ViewData["Title"] = "Index"; }
<link rel="stylesheet" href="~/css/PagedList.css">


<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>

    @using (Html.BeginForm())
    {
    <p>
        Title: @Html.TextBox("SearchString") <br />
        <input type="submit" value="Filter" />
    </p>
}
    </p>
    <table class="table-responsive table">
        <thead>
            <tr>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Naam)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
<tr>
    <td scope="row">
        @Html.DisplayFor(modelItem => item.Naam)
    </td>
    <td>
        <a asp-action="Edit" asp-route-id="@item.Artiestid">Edit</a> |
        <a asp-action="Details" asp-route-id="@item.Artiestid">Details</a> |
        <a asp-action="Delete" asp-route-id="@item.Artiestid">Delete</a>
    </td>
</tr>
}
        </tbody>
    </table>

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))

    <script>
        function searchForRecord() {
            let filter = event.target.value.toUpperCase();
            let rows = document.querySelector("#RecordTable tbody").rows;
            for (let i = 0; i < rows.length; i++) {
                let firstCol = rows[i].cells[0].textContent.toUpperCase();
                if (firstCol.indexOf(filter) > -1) {
                    rows[i].style.display = "";
                } else {
                    rows[i].style.display = "none";
                }
            }
        }
    </script>